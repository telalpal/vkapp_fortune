{"version":3,"sources":["panels/Home.js","wheelUtils.js","panels/Wheel.js","data.js","App.js","index.js"],"names":["Home","_ref","id","go","availableDays","setDay","selectedDay","dayDescription","react_default","a","createElement","vkui","top","defaultValue","onChange","_ref2","target","value","map","day","key","concat","size","level","onClick","data-to","COLORS","PI","Math","TAU","degToRad","deg","getCoordOnCircle","r","angleInRad","cx","cy","x","cos","y","sin","wheelFactory","mountElem","speed","words","two","group","ratios","tickerRadius","textSize","edgeDist","options","width","height","type","friction","dirScalar","setViewBox","renderer","domElement","setAttribute","drawTicker","outerRadius","circleCenter","_two2","arc","makeArcSegment","noStroke","drawTickerCircle","translation","radius","tangentAngle","tickerCenter","pointA","pointB","pointC","pointD","path","makePath","drawTickerArrow","drawWheel","destroyPaths","numColors","length","rotationUnit","xOffset","center","makeGroup","word","i","arr","angle","rotation","fill","textVertex","text","makeText","alignment","add","set","update","handleResize","animateWheel","unbind","onWheelStop","getCurrentWord","numWords","segmentAngle","currAngle","find","_","remove","apply","children","clear","destroy","init","opts","Object","objectSpread","Two","Types","bind","play","appendTo","setWords","wordsArr","spin","newSpeed","osname","platform","Wheel","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleSpin","setState","spinEnabled","wheel","random","handleWheelStop","bonus","data","el","caption","modal","activeModal","onClose","closeDetailsModal","title","actions","action","setModal","state","mount","document","querySelector","min","window","innerWidth","innerHeight","choice","left","IOS","chevron_back_default","back_default","disabled","React","Component","1","choises","description","2","App","e","activePanel","currentTarget","dataset","to","getDefaultDay","keys","choisesData","panels_Home","src_panels_Wheel","ReactDOM","render","src_App","getElementById"],"mappings":"wNAuCeA,UAlCF,SAAAC,GAAA,IAAGC,EAAHD,EAAGC,GAAIC,EAAPF,EAAOE,GAAIC,EAAXH,EAAWG,cAAeC,EAA1BJ,EAA0BI,OAAQC,EAAlCL,EAAkCK,YAAaC,EAA/CN,EAA+CM,eAA/C,OACTC,EAAAC,EAAAC,cAACC,EAAA,MAAD,CAAOT,GAAIA,GACPM,EAAAC,EAAAC,cAACC,EAAA,YAAD,wFACAH,EAAAC,EAAAC,cAACC,EAAA,WAAD,KACIH,EAAAC,EAAAC,cAACC,EAAA,OAAD,CACIC,IAAI,iHACJC,aAAcP,EACdQ,SAAU,SAAAC,GAAA,IAAEC,EAAFD,EAAEC,OAAF,OAAcX,EAAOW,EAAOC,SAGlCb,EAAcc,IAAI,SAACC,GACf,OAAQX,EAAAC,EAAAC,cAAA,UAAQO,MAAOE,EAAKC,IAAKD,GAAzB,iEAAAE,OAA8CF,MAPlE,MAYJX,EAAAC,EAAAC,cAACC,EAAA,IAAD,KACIH,EAAAC,EAAAC,cAACC,EAAA,OAAD,CAAQW,KAAK,KAAKC,MAAM,IAAIC,QAASrB,EAAIsB,UAAQ,SAAjD,mCAIJjB,EAAAC,EAAAC,cAACC,EAAA,OAAD,KAASJ,iECxBJmB,EAAS,CAClB,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,WAESC,EAAKC,KAAKD,GACVE,EAAW,EAALF,EAEbG,EAAW,SAAAC,GAAG,OAAIA,EAAM,IAAMJ,GAE9BK,EAAmB,SAACC,EAAGC,EAAJjC,GAA+B,IAAbkC,EAAalC,EAAbkC,GAAIC,EAASnC,EAATmC,GAC3C,MAAO,CACHC,EAAGF,EAAKF,EAAIL,KAAKU,IAAIJ,GACrBK,EAAGH,EAAKH,EAAIL,KAAKY,IAAIN,KAIhBO,EAAe,SAAAC,GACxB,IAYIC,EACAC,EACAC,EACAC,EAfEC,EAAS,CACXC,aAAc,IACdC,SAAU,IACVC,SAAU,KAEVC,EAAU,CACVC,MAAO,IACPC,OAAQ,IACRC,KAAM,OAEJC,EAAW,IACbC,EAAY,EAmChB,SAASC,EAAWL,EAAOC,GACvBR,EAAIa,SAASC,WAAWC,aAAa,UAArC,OAAAvC,OAAuD+B,EAAvD,KAAA/B,OAAgEgC,IAGpE,SAASQ,IAAa,IACVT,EAAUP,EAAVO,MACFU,EAAcf,EAAOC,aAAeI,EAGpCW,EAKV,SAA0BD,GAAa,IAAAE,EACTnB,EAAlBQ,EAD2BW,EAC3BX,OAAQD,EADmBY,EACnBZ,MACVa,EAAMpB,EAAIqB,eACZd,EAAQU,EACRT,EAAS,EACTS,EACc,GAAdA,EACA,EACA,EAAInC,GAIR,OAFAsC,EAAIE,WAEGF,EAlBcG,CAAiBN,GACJO,aAoBtC,SAAyBC,EAAQC,EAAcC,GAAc,IACjDnC,EAASmC,EAATnC,EAAGE,EAAMiC,EAANjC,EAELkC,EAASzC,EAAiBsC,EAAQ3C,EAAI,CAAEQ,GAAIE,EAAGD,GAAIG,IACnDmC,EAAS1C,EAAiBsC,EAAQ3C,EAAK,EAAI4C,EAAc,CAC3DpC,GAAIE,EACJD,GAAIG,IAEFoC,EAAS,CACXtC,EAAGA,EAAIiC,EAAS1C,KAAKU,IAAIX,EAAK,EAAI4C,GAClChC,EAAGA,GAEDqC,EAAS5C,EAAiBsC,EAAQ,EAAI3C,EAAK,EAAI4C,EAAc,CAC/DpC,GAAIE,EACJD,GAAIG,IAEFsC,EAAOhC,EAAIiC,SACbL,EAAOpC,EACPoC,EAAOlC,EACPmC,EAAOrC,EACPqC,EAAOnC,EACPoC,EAAOtC,EACPsC,EAAOpC,EACPqC,EAAOvC,EACPuC,EAAOrC,GAEXsC,EAAKV,WA5CLY,CAAgBjB,EAAahC,EAAS,IAAKiC,GAiD/C,SAASiB,IACDlC,GACAmC,IAFa,IAKT7B,EAAUP,EAAVO,MACF8B,EAAYxD,EAAOyD,OACnBC,EAAe,EAAIzD,EAAKiB,EAAMuC,OAC9BE,EAAUjC,EAAQL,EAAOC,aAAe,EACxCsB,GAAUlB,EAAkB,EAAViC,GAAe,EACjCC,EAAS,CACXjD,EAAGe,EAAQ,EACXb,EAAG+B,EAASe,GAEhBvC,EAAQD,EAAI0C,YAEZ3C,EAAM1B,IAAI,SAACsE,EAAMC,EAAGC,GAChB,IAAMC,EAAQP,EAAeK,GAAK9D,EAAKyD,GAAgB,EACjDnB,EAAMpB,EAAIqB,eACZoB,EAAOjD,EACPiD,EAAO/C,EACP,EACA+B,EACA,EACA,EAAI3C,EAAK+D,EAAIP,QAEjBlB,EAAI2B,SAAWD,EACf1B,EAAIE,WACJF,EAAI4B,KAAOnE,EAAO+D,EAAIP,GAEtB,IAAMY,EAAa,CACfzD,EACIiD,EAAOjD,GACNiC,EAASA,EAASvB,EAAOG,UAC1BtB,KAAKU,IAAIqD,EAAQP,EAAe,GACpC7C,EACI+C,EAAO/C,GACN+B,EAASA,EAASvB,EAAOG,UAC1BtB,KAAKY,IAAImD,EAAQP,EAAe,IAGlCW,EAAOlD,EAAImD,SAASR,EAAMM,EAAWzD,EAAGyD,EAAWvD,GAMzD,OALAwD,EAAKH,SAAWR,EAAeK,EAAI9D,EAAK,EACxCoE,EAAKE,UAAY,QACjBF,EAAKF,KAAO,OACZE,EAAKzE,KAAOgD,EAASvB,EAAOE,SAErBH,EAAMoD,IAAIjC,EAAK8B,KAG1BjD,EAAMuB,YAAY8B,IAAIb,EAAOjD,EAAGiD,EAAO/C,GACvCO,EAAMwC,SACNzB,IAEAhB,EAAIuD,SAGR,SAASC,IACL5C,EAAWZ,EAAIO,MAAOP,EAAIQ,QAC1B2B,IACAnB,IACAhB,EAAIuD,SAGR,SAASE,IACLxD,EAAM8C,UAAY9C,EAAM8C,SAAWjD,EAAQa,GAAa3B,GACxDc,GAAgBY,GAEJ,OACRV,EAAI0D,OAAO,SAAUD,GAEjBnD,EAAQqD,aAA8C,oBAAxBrD,EAAQqD,aACtCrD,EAAQqD,YAAYC,MAUhC,SAASA,IACL,IAAMC,EAAW9D,EAAMuC,OACjBwB,EAAe9E,EAAM6E,EACrBE,GAAa/E,EAAMF,EAAK,EAAImB,EAAM8C,SAAWe,EAAe,GAAK9E,EAEvE,OAAOe,EAAMiE,KAAK,SAACC,EAAGrB,GAAJ,OAAUkB,GAAgBlB,EAAI,GAAKmB,IAGzD,SAAS3B,IACLnC,EAAMiE,OAAOC,MAAMlE,EAAOA,EAAMmE,UAChCpE,EAAIqE,QASR,MAAO,CACHC,QAPJ,WAGI,OAFAlC,KAEO,GAKPD,YACAyB,iBACAW,KAlMJ,SAAcC,GACVlE,EAAOmE,OAAAC,EAAA,EAAAD,CAAA,GAAQnE,EAAYkE,IAE3BxE,EAAM,IAAI2E,IAAI,CACVlE,KAAMkE,IAAIC,MAAMtE,EAAQG,MACxBF,MAAOD,EAAQC,MACfC,OAAQF,EAAQE,SAEfqE,KAAK,SAAUrB,GACfsB,QAEDC,SAASlF,GACbe,EAAWN,EAAQC,MAAOD,EAAQE,QAClCR,EAAIa,SAASC,WAAWC,aACpB,QADJ,yNAsLAiE,SA1KJ,SAAkBC,GACdlF,EAAQkF,GA0KRC,KA9BJ,SAAcC,GACVrF,EAAQqF,EACRnF,EAAI6E,KAAK,SAAUpB,MCjMrB2B,EAASC,qBA0FAC,cAtFX,SAAAA,EAAYC,GAAO,IAAAC,EAAA,OAAAf,OAAAgB,EAAA,EAAAhB,CAAAiB,KAAAJ,IACfE,EAAAf,OAAAkB,EAAA,EAAAlB,CAAAiB,KAAAjB,OAAAmB,EAAA,EAAAnB,CAAAa,GAAAO,KAAAH,KAAMH,KAsBVO,WAAa,WACTN,EAAKO,SAAS,CAAEC,aAAa,IAC7BR,EAAKS,MAAMf,KAAKnG,KAAKmH,WAzBNV,EA6BnBW,gBAAkB,SAACxD,GACf,IAAMyD,EAAQZ,EAAKD,MAAMc,KAAKrC,KAAK,SAAAsC,GAAE,OAAIA,EAAGC,UAAY5D,IAElD6D,EACF7I,EAAAC,EAAAC,cAACC,EAAA,UAAD,CAAW2I,YAAY,sBACnB9I,EAAAC,EAAAC,cAACC,EAAA,UAAD,CACIT,GAAG,qBACHqJ,QAASlB,EAAKmB,kBAEdC,MAAK,iEAAApI,OAAiBmE,GACtB4D,QAASH,EAAMlD,KACf2D,QAAS,CAAC,CACND,MAAO,sEACPnG,KAAM,UACNqG,OAAQtB,EAAKmB,uBAM7BnB,EAAKD,MAAMwB,SAASP,IAjDLhB,EAoDnBmB,kBAAoB,WAChBnB,EAAKD,MAAMwB,SAAS,MACpBvB,EAAKO,SAAS,CAAEC,aAAa,KAnD7BR,EAAKwB,MAAQ,CACThB,aAAa,GAEjBR,EAAKS,MAAQ,KANET,mFAUf,IAAMyB,EAAQC,SAASC,cAAc,mBACrCzB,KAAKO,MAAQrG,EAAaqH,GAC1BvB,KAAKO,MAAM1B,KAAK,CACZhE,MAAOxB,KAAKqI,IAAIC,OAAOC,WAAYD,OAAOE,aAC1C/G,OAAQzB,KAAKqI,IAAIC,OAAOC,WAAYD,OAAOE,aAC3C5D,YAAa+B,KAAKS,kBAGtB,IAAMpG,EAAQ2F,KAAKH,MAAMc,KAAKhI,IAAI,SAAAmJ,GAAM,OAAIA,EAAOjB,UACnDb,KAAKO,MAAMjB,SAASjF,GACpB2F,KAAKO,MAAM9D,6CAsCX,OACIxE,EAAAC,EAAAC,cAACC,EAAA,MAAD,CAAOT,GAAIqI,KAAKH,MAAMlI,IAClBM,EAAAC,EAAAC,cAACC,EAAA,YAAD,CACI2J,KAAM9J,EAAAC,EAAAC,cAACC,EAAA,aAAD,CAAca,QAAS+G,KAAKH,MAAMjI,GAAIsB,UAAQ,QAC/CwG,IAAWsC,MAAM/J,EAAAC,EAAAC,cAAC8J,EAAA/J,EAAD,MAAwBD,EAAAC,EAAAC,cAAC+J,EAAAhK,EAAD,QAFlD,mFAOAD,EAAAC,EAAAC,cAAA,OAAKR,GAAG,mBACRM,EAAAC,EAAAC,cAACC,EAAA,IAAD,KACIH,EAAAC,EAAAC,cAACC,EAAA,OAAD,CAAQY,MAAM,WAAWD,KAAK,KAAKE,QAAS+G,KAAKI,WAAY+B,UAAWnC,KAAKsB,MAAMhB,aAAnF,wDAtEA8B,IAAMC,WCgCX1B,EArDF,CACT2B,EAAG,CACCC,QAAQ,CACJ,CACI1B,QAAS,WACTrD,KAAM,gTAEV,CACIqD,QAAS,WACTrD,KAAM,mDAEV,CACIqD,QAAS,WACTrD,KAAM,2ZAEV,CACIqD,QAAS,WACTrD,KAAM,8CAEV,CACIqD,QAAS,WACTrD,KAAM,4DAGdgF,YAAa,qIAEjBC,EAAG,CACCF,QAAQ,CACJ,CACI1B,QAAS,WACTrD,KAAM,WAEV,CACIqD,QAAS,WACTrD,KAAM,WAEV,CACIqD,QAAS,WACTrD,KAAM,WAEV,CACIqD,QAAS,WACTrD,KAAM,WAEV,CACIqD,QAAS,WACTrD,KAAM,YAGdgF,YAAa,oBCYNE,cApDX,SAAAA,EAAY7C,GAAO,IAAAC,EAAA,OAAAf,OAAAgB,EAAA,EAAAhB,CAAAiB,KAAA0C,IACf5C,EAAAf,OAAAkB,EAAA,EAAAlB,CAAAiB,KAAAjB,OAAAmB,EAAA,EAAAnB,CAAA2D,GAAAvC,KAAAH,KAAMH,KASVjI,GAAK,SAAC+K,GACF7C,EAAKO,SAAS,CAAEuC,YAAaD,EAAEE,cAAcC,QAAQC,MAXtCjD,EAcnBuB,SAAW,SAACP,GACRhB,EAAKO,SAAS,CAACS,WAfAhB,EAkBnBhI,OAAS,SAACc,GACNkH,EAAKO,SAAS,CAACzH,SAnBAkH,EAsBnBkD,cAAgB,WACZ,MAAO,KApBPlD,EAAKwB,MAAQ,CACTsB,YAAa,OACb9B,MAAO,KACPlI,IAAK,MANMkH,wEA2Bf,IAAMjI,EAAgBkH,OAAOkE,KAAKtC,GAC5B/H,EAAMoH,KAAKsB,MAAM1I,KAAOoH,KAAKgD,gBAC7BhL,EAAiB2I,EAAK/H,GAAK4J,YAC3BU,EAAcvC,EAAK/H,GAAK2J,QAC9B,OACItK,EAAAC,EAAAC,cAACC,EAAA,KAAD,CAAMwK,YAAa5C,KAAKsB,MAAMsB,YAAa9B,MAAOd,KAAKsB,MAAMR,OACzD7I,EAAAC,EAAAC,cAACgL,EAAD,CACIxL,GAAG,OACHC,GAAIoI,KAAKpI,GACTC,cAAeA,EACfC,OAAQkI,KAAKlI,OACbC,YAAaa,EACbZ,eAAgBA,IAEpBC,EAAAC,EAAAC,cAACiL,EAAD,CACIzL,GAAG,QACHC,GAAIoI,KAAKpI,GACTyJ,SAAUrB,KAAKqB,SACfV,KAAMuC,YA9CRd,IAAMC,WCFxBgB,IAASC,OAAOrL,EAAAC,EAAAC,cAACoL,EAAD,MAAS/B,SAASgC,eAAe","file":"static/js/main.6573c7f3.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Panel, Button, Div, PanelHeader, FormLayout, Select, Footer } from '@vkontakte/vkui';\n\n\nconst Home = ({ id, go, availableDays, setDay, selectedDay, dayDescription }) => (\n    <Panel id={id}>\n        <PanelHeader>Лунная Фортуна</PanelHeader>\n        <FormLayout>\n            <Select \n                top=\"Выберите лунный день\"\n                defaultValue={selectedDay}\n                onChange={({target}) => setDay(target.value)}\n            >\n                {\n                    availableDays.map((day) => {\n                        return (<option value={day} key={day}>{`Лунный день ${day}`}</option>)\n                    })\n                })\n            </Select>\n        </FormLayout>\n        <Div>\n            <Button size=\"xl\" level=\"2\" onClick={go} data-to=\"wheel\">\n                Нажми\n            </Button>\n        </Div>\n        <Footer>{dayDescription}</Footer>\n    </Panel>\n);\n\nHome.propTypes = {\n    id: PropTypes.string.isRequired,\n    go: PropTypes.func.isRequired,\n    selectedDay: PropTypes.string.isRequired,\n    setDay: PropTypes.func.isRequired,\n    availableDays: PropTypes.arrayOf(PropTypes.string).isRequired,\n    dayDescription: PropTypes.string.isRequired,\n};\n\nexport default Home;\n","import Two from 'two.js'\n\nexport const COLORS = [\n    '#f7d046',\n    '#ff4c5a',\n    '#f08cba',\n    '#49c4d2',\n    '#924e84',\n    '#fd926f',\n    '#245a65',\n    '#ff6a76',\n    '#633d89',\n];\nexport const PI = Math.PI;\nexport const TAU = PI * 2;\n\nconst degToRad = deg => deg / 180 * PI;\n\nconst getCoordOnCircle = (r, angleInRad, { cx, cy }) => {\n    return {\n        x: cx + r * Math.cos(angleInRad),\n        y: cy + r * Math.sin(angleInRad),\n    };\n};\n\nexport const wheelFactory = mountElem => {\n    const ratios = {\n        tickerRadius: 0.06, // of width\n        textSize: 0.12, // of radius\n        edgeDist: 0.14, // of radius\n    };\n    let options = {\n        width: 360,\n        height: 360,\n        type: 'svg',\n    };\n    const friction = 0.99;\n    let dirScalar = 1;\n    let speed;\n    let words;\n    let two;\n    let group;\n\n    function init(opts) {\n        options = { ...options, ...opts };\n\n        two = new Two({\n            type: Two.Types[options.type],\n            width: options.width,\n            height: options.height,\n        })\n            .bind('resize', handleResize)\n            .play();\n\n        two.appendTo(mountElem);\n        setViewBox(options.width, options.height);\n        two.renderer.domElement.setAttribute(\n            'style',\n            `\n            -moz-user-select:none;\n            -ms-user-select:none;\n            -webkit-user-select:none;\n            user-select:none;\n            -webkit-tap-highlight-color: rgba(0,0,0,0);\n            `\n        );\n    }\n\n    function setWords(wordsArr) {\n        words = wordsArr;\n    }\n\n    function setViewBox(width, height) {\n        two.renderer.domElement.setAttribute('viewBox', `0 0 ${width} ${height}`);\n    }\n\n    function drawTicker() {\n        const { width } = two;\n        const outerRadius = ratios.tickerRadius * width;\n\n        const tickerCircle = drawTickerCircle(outerRadius);\n        const circleCenter = tickerCircle.translation;\n\n        drawTickerArrow(outerRadius, degToRad(30), circleCenter);\n    }\n\n    function drawTickerCircle(outerRadius) {\n        const { height, width } = two;\n        const arc = two.makeArcSegment(\n            width - outerRadius,\n            height / 2,\n            outerRadius,\n            outerRadius * 0.5,\n            0,\n            2 * PI\n        );\n        arc.noStroke();\n\n        return arc;\n    }\n\n    function drawTickerArrow(radius, tangentAngle, tickerCenter) {\n        const { x, y } = tickerCenter;\n\n        const pointA = getCoordOnCircle(radius, PI, { cx: x, cy: y });\n        const pointB = getCoordOnCircle(radius, PI / 2 + tangentAngle, {\n            cx: x,\n            cy: y,\n        });\n        const pointC = {\n            x: x - radius / Math.cos(PI / 2 - tangentAngle),\n            y: y,\n        };\n        const pointD = getCoordOnCircle(radius, 3 * PI / 2 - tangentAngle, {\n            cx: x,\n            cy: y,\n        });\n        const path = two.makePath(\n            pointA.x,\n            pointA.y,\n            pointB.x,\n            pointB.y,\n            pointC.x,\n            pointC.y,\n            pointD.x,\n            pointD.y\n        );\n        path.noStroke();\n\n        return path;\n    }\n\n    function drawWheel() {\n        if (group) {\n            destroyPaths();\n        }\n\n        const { width } = two;\n        const numColors = COLORS.length;\n        const rotationUnit = 2 * PI / words.length;\n        const xOffset = width * ratios.tickerRadius * 2;\n        const radius = (width - xOffset * 2) / 2;\n        const center = {\n            x: width / 2,\n            y: radius + xOffset,\n        };\n        group = two.makeGroup();\n\n        words.map((word, i, arr) => {\n            const angle = rotationUnit * i - (PI + rotationUnit) / 2;\n            const arc = two.makeArcSegment(\n                center.x,\n                center.y,\n                0,\n                radius,\n                0,\n                2 * PI / arr.length\n            );\n            arc.rotation = angle;\n            arc.noStroke();\n            arc.fill = COLORS[i % numColors];\n\n            const textVertex = {\n                x:\n                    center.x +\n                    (radius - radius * ratios.edgeDist) *\n                    Math.cos(angle + rotationUnit / 2),\n                y:\n                    center.y +\n                    (radius - radius * ratios.edgeDist) *\n                    Math.sin(angle + rotationUnit / 2),\n            };\n\n            const text = two.makeText(word, textVertex.x, textVertex.y);\n            text.rotation = rotationUnit * i - PI / 2;\n            text.alignment = 'right';\n            text.fill = '#fff';\n            text.size = radius * ratios.textSize;\n\n            return group.add(arc, text);\n        });\n\n        group.translation.set(center.x, center.y);\n        group.center();\n        drawTicker();\n\n        two.update();\n    }\n\n    function handleResize() {\n        setViewBox(two.width, two.height);\n        drawWheel();\n        drawTicker();\n        two.update();\n    }\n\n    function animateWheel() {\n        group.rotation = (group.rotation + speed * dirScalar) % TAU;\n        speed = speed * friction;\n\n        if (speed < 0.005) {\n            two.unbind('update', animateWheel);\n\n            if (options.onWheelStop && typeof options.onWheelStop === 'function') {\n                options.onWheelStop(getCurrentWord());\n            }\n        }\n    }\n\n    function spin(newSpeed) {\n        speed = newSpeed;\n        two.bind('update', animateWheel);\n    }\n\n    function getCurrentWord() {\n        const numWords = words.length;\n        const segmentAngle = TAU / numWords;\n        const currAngle = (TAU + PI / 2 - group.rotation + segmentAngle / 2) % TAU;\n\n        return words.find((_, i) => segmentAngle * (i + 1) > currAngle);\n    }\n\n    function destroyPaths() {\n        group.remove.apply(group, group.children);\n        two.clear();\n    }\n\n    function destroy() {\n        destroyPaths();\n\n        return true;\n    }\n\n    return {\n        destroy,\n        drawWheel,\n        getCurrentWord,\n        init,\n        setWords,\n        spin,\n    };\n};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n    Panel,\n    PanelHeader,\n    HeaderButton,\n    platform,\n    IOS,\n    Button,\n    Div,\n    ModalRoot,\n    ModalCard\n} from '@vkontakte/vkui';\nimport './Wheel.css';\nimport Icon28ChevronBack from '@vkontakte/icons/dist/28/chevron_back';\nimport Icon24Back from '@vkontakte/icons/dist/24/back';\nimport { wheelFactory } from '../wheelUtils';\n\nconst osname = platform();\n\n\nclass Wheel extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            spinEnabled: true,\n        };\n        this.wheel = null;\n    }\n\n    componentDidMount() {\n        const mount = document.querySelector('#wheelContainer');\n        this.wheel = wheelFactory(mount);\n        this.wheel.init({\n            width: Math.min(window.innerWidth, window.innerHeight),\n            height: Math.min(window.innerWidth, window.innerHeight),\n            onWheelStop: this.handleWheelStop,\n        });\n\n        const words = this.props.data.map(choice => choice.caption);\n        this.wheel.setWords(words);\n        this.wheel.drawWheel();\n    }\n\n    handleSpin = () => {\n        this.setState({ spinEnabled: false });\n        this.wheel.spin(Math.random());\n        // this.wheel.spin(2.99);\n    }\n\n    handleWheelStop = (word) => {\n        const bonus = this.props.data.find(el => el.caption === word);\n\n        const modal = (\n            <ModalRoot activeModal=\"results_modal_card\">\n                <ModalCard\n                    id=\"results_modal_card\"\n                    onClose={this.closeDetailsModal}\n                    // icon={<Icon56MoneyTransferOutline />}\n                    title={`Тебе выпало ${word}`}\n                    caption={bonus.text}\n                    actions={[{\n                        title: 'Ясно понятно',\n                        type: 'primary',\n                        action: this.closeDetailsModal,\n                    }]}\n                >\n                </ModalCard>\n            </ModalRoot>\n        );\n        this.props.setModal(modal)\n    }\n\n    closeDetailsModal = () => {\n        this.props.setModal(null)\n        this.setState({ spinEnabled: true })\n    }\n\n    render() {\n        return (\n            <Panel id={this.props.id}>\n                <PanelHeader\n                    left={<HeaderButton onClick={this.props.go} data-to=\"home\">\n                        {osname === IOS ? <Icon28ChevronBack /> : <Icon24Back />}\n                    </HeaderButton>}\n                >\n                    Лунная Фортуна\n                        </PanelHeader>\n                <div id=\"wheelContainer\" />\n                <Div>\n                    <Button level=\"commerce\" size=\"xl\" onClick={this.handleSpin} disabled={!this.state.spinEnabled}>Крутить!</Button>\n                </Div>\n            </Panel>\n        )\n    }\n}\n\nWheel.propTypes = {\n    id: PropTypes.string.isRequired,\n    go: PropTypes.func.isRequired,\n    setModal: PropTypes.func.isRequired,\n    data: PropTypes.arrayOf(PropTypes.shape({\n        caption: PropTypes.string.isRequired,\n        text: PropTypes.string.isRequired,\n    })).isRequired,\n};\n\nexport default Wheel;\n","const data = {\n    1: {\n        choises:[\n            {\n                caption: \"choise 1\",\n                text: \"длваоджлроавдлрповадпровждаровджароваждплродвжарпд\"\n            },\n            {\n                caption: \"choise 2\",\n                text: \"bad day bad day bad day bad day bad day bad day\"\n            },\n            {\n                caption: \"choise 3\",\n                text: \"средне средне средне средне средне средне средне средне средне средне средне \"\n            },\n            {\n                caption: \"choise 4\",\n                text: \"повезло\"\n            },\n            {\n                caption: \"choise 5\",\n                text: \"не повезло\"\n            },\n        ],\n        description: \"День пиздец какой ебучий\"\n    },\n    2: {\n        choises:[\n            {\n                caption: \"choise 1\",\n                text: \"bad day\"\n            },\n            {\n                caption: \"choise 2\",\n                text: \"bad day\"\n            },\n            {\n                caption: \"choise 3\",\n                text: \"bad day\"\n            },\n            {\n                caption: \"choise 4\",\n                text: \"bad day\"\n            },\n            {\n                caption: \"choise 5\",\n                text: \"bad day\"\n            },\n        ],\n        description: \"second moon day\"\n    }\n}\n\nexport default data;","import React from 'react';\nimport { View } from '@vkontakte/vkui';\nimport '@vkontakte/vkui/dist/vkui.css';\n\nimport Home from './panels/Home';\nimport Wheel from './panels/Wheel';\nimport data from './data';\n\nclass App extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            activePanel: 'home',\n            modal: null,\n            day: null,\n        };\n    }\n\n    go = (e) => {\n        this.setState({ activePanel: e.currentTarget.dataset.to })\n    };\n\n    setModal = (modal) => {\n        this.setState({modal})\n    }\n\n    setDay = (day) => {\n        this.setState({day})\n    }\n\n    getDefaultDay = () => {\n        return \"2\";\n    }\n\n    render() {\n        const availableDays = Object.keys(data);\n        const day = this.state.day || this.getDefaultDay();\n        const dayDescription = data[day].description;\n        const choisesData = data[day].choises;\n        return (\n            <View activePanel={this.state.activePanel} modal={this.state.modal}>\n                <Home\n                    id=\"home\"\n                    go={this.go}\n                    availableDays={availableDays}\n                    setDay={this.setDay}\n                    selectedDay={day}\n                    dayDescription={dayDescription}\n                />\n                <Wheel\n                    id=\"wheel\"\n                    go={this.go}\n                    setModal={this.setModal}\n                    data={choisesData}\n                />\n            </View>\n        );\n    }\n}\n\nexport default App;\n","import 'core-js/features/map';\nimport 'core-js/features/set';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}